package iie.hadoop.hcatalog;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.hive.hcatalog.common.HCatException;
import org.apache.hive.hcatalog.data.DefaultHCatRecord;
import org.apache.hive.hcatalog.data.HCatRecord;
import org.apache.hive.hcatalog.data.transfer.DataTransferFactory;
import org.apache.hive.hcatalog.data.transfer.HCatWriter;
import org.apache.hive.hcatalog.data.transfer.WriteEntity;
import org.apache.hive.hcatalog.data.transfer.WriterContext;
/**
 * 利用HCatWriter接口，读本地文件中的数据，写到hive表里
 * 
   CREATE TABLE student (name STRING，age INT)
   ROW FORMAT DELIMITED
   FIELDS TERMINATED BY '\t'
   LINES TERMINATED BY '\n'
   STORED AS TEXTFILE;
 * 
 * @author xiaodongfang
 */
public class HCatWriterTest {

	public static void main(String[] args) throws HCatException {

		WriteEntity.Builder builder = new WriteEntity.Builder();
		WriteEntity entity = builder.withDatabase(args[0]).withTable(args[1])
				.build();
		Map<String, String> config = new HashMap<String, String>();
		HCatWriter writer = DataTransferFactory.getHCatWriter(entity, config);
		WriterContext context = writer.prepareWrite();
		HCatWriter splitWriter = DataTransferFactory.getHCatWriter(context);
		List<HCatRecord> records = new ArrayList<HCatRecord>();

		File writeFile = new File(args[2]);
		BufferedReader buffer = null;
		String line = null;
		String[] con = null;

		try {
			buffer = new BufferedReader(new InputStreamReader(
					new FileInputStream(writeFile), "UTF-8"));
			line = buffer.readLine();
			while (line != null) {
				List<Object> list = new ArrayList<Object>(2);
				con = line.split("\t", -1);
				list.add(con[0]);
				list.add(Integer.parseInt(con[1]));
				records.add(new DefaultHCatRecord(list));
				line = buffer.readLine();
			}
			buffer.close();
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.exit(0);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.exit(0);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.exit(0);
		}

		splitWriter.write(records.iterator());
		writer.commit(context);
		System.exit(0);
	}
}
